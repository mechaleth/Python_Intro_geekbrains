# Создать класс TrafficLight (светофор) и определить у него один атрибут color (цвет)
# и метод running (запуск). Атрибут реализовать как приватный.
# В рамках метода реализовать переключение светофора в режимы:
# красный, желтый, зеленый.
# Продолжительность первого состояния (красный) составляет 7 секунд,
# второго (желтый) — 2 секунды, третьего (зеленый) — на ваше усмотрение.
# Переключение между режимами должно осуществляться только в указанном порядке
# (красный, желтый, зеленый).
# Проверить работу примера, создав экземпляр и вызвав описанный метод.
#
# Задачу можно усложнить, реализовав проверку порядка режимов,
# и при его нарушении выводить соответствующее сообщение и завершать скрипт.

# Задание абстрактное, конечно)
# Переключение между всеми режимами автоматически или пользователь задаёт текущий режим???
# Если автоматически, то какого типа проверка и зачем она в принципе?
# Если пользователь задаёт текущий режим, то проверка нужна. Но зачем задержки?) И какой тогда это светофор?
# Нужен ли бесконечный цикл? Или цикл, прерывающийся по какому-либо условию? По какому условию?
# Разве не зелёный, желтый, красный??

import time


class TrafficLight:
    __color: str

    def running(self):
        self.__color = "red"
        print(self.__color)
        time.sleep(7)
        self.__color = "yellow"
        print(self.__color)
        time.sleep(2)
        self.__color = "green"
        print(self.__color)
        time.sleep(4)


if __name__ == "__main__":
    obj = TrafficLight()
    obj.running()
    obj.running()
    print("Thats all!")
